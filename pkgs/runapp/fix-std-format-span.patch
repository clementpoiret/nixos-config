diff -ruN a/src/main.cpp b/src/main.cpp
--- a/src/main.cpp	2025-09-18 10:52:02.254782204 +0200
+++ b/src/main.cpp	2025-09-18 10:53:23.392991566 +0200
@@ -26,6 +26,27 @@
 #include <unistd.h>
 }
 
+// Convert an argv-like span to a single space-separated string for logging.
+static std::string joinArgv(std::span<const char*> args)
+{
+    std::string out;
+    // Best-effort pre-reserve to limit reallocations.
+    std::size_t total = 0;
+    for (const char* a : args) {
+        if (a) total += std::strlen(a) + 1; // +1 for space
+    }
+    if (total) out.reserve(total - 1);
+
+    bool first = true;
+    for (const char* a : args) {
+        if (!a) continue;
+        if (!first) out.push_back(' ');
+        first = false;
+        out.append(a);
+    }
+    return out;
+}
+
 
 namespace {
 
@@ -244,11 +265,12 @@
         "org.freedesktop.DBus.Local", nullptr, "org.freedesktop.DBus.Local",
         "Disconnected", onDisconnected);
 
+    const std::string joinedArgs = joinArgv(args.args);
     if (args.isScope) {
-        verbosePrintln("Starting {}; will execute: {}.", unitName, args.args);
+        verbosePrintln("Starting {}; will execute: {}.", unitName, joinedArgs);
     }
     else {
-        verbosePrintln("Launching {}: {}.", unitName, args.args);
+        verbosePrintln("Launching {}: {}.", unitName, joinedArgs);
     }
 
     auto onStartResponse = bus.createHandler([&jobPath](DBusMessage& resp) {
